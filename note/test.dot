strict digraph  {
rankdir=BT;
splines=ortho;
"d-00" [bipartite=data, idx=0, kind=data, shape="circle", tgt="[0]"];
"d-01" [bipartite=data, idx=1, kind=data, shape="circle", tgt="[1]"];
"d-02" [bipartite=data, idx=2, kind=data, shape="circle", tgt="[2]"];
"d-04" [bipartite=data, idx=4, kind=data, shape="circle", tgt="[4]"];
"d-05" [bipartite=data, idx=5, kind=data, shape="circle", tgt="[5]"];
"f-01" [bipartite=func, function=<bound method ForestRegressor.predict of RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=5,
           max_features='auto', max_leaf_nodes=None,
           min_impurity_decrease=0.0, min_impurity_split=None,
           min_samples_leaf=1, min_samples_split=2,
           min_weight_fraction_leaf=0.0, n_estimators=5, n_jobs=None,
           oob_score=False, random_state=None, verbose=0, warm_start=False)>, idx=1, kind=model, mod="RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=5,\n           max_features='auto', max_leaf_nodes=None,\n           min_impurity_decrease=0.0, min_impurity_split=None,\n           min_samples_leaf=1, min_samples_split=2,\n           min_weight_fraction_leaf=0.0, n_estimators=5, n_jobs=None,\n           oob_score=False, random_state=None, verbose=0, warm_start=False)", shape="square", src="[0, 1, 2]", tgt="[4, 5]", width=1];
"d-07" [bipartite=data, idx=7, kind=data, shape="circle", tgt="[7]"];
"f-02" [bipartite=func, function=<bound method ForestClassifier.predict of RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=5, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=5, n_jobs=None,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)>, idx=2, kind=model, mod="RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n            max_depth=5, max_features='auto', max_leaf_nodes=None,\n            min_impurity_decrease=0.0, min_impurity_split=None,\n            min_samples_leaf=1, min_samples_split=2,\n            min_weight_fraction_leaf=0.0, n_estimators=5, n_jobs=None,\n            oob_score=False, random_state=None, verbose=0,\n            warm_start=False)", shape="square", src="[1, 2, 5]", tgt="[7]", width=1];
"d-00" -> "f-01"  [idx=0];
"d-01" -> "f-01"  [idx=1];
"d-01" -> "f-02"  [idx=1];
"d-02" -> "f-01"  [idx=2];
"d-02" -> "f-02"  [idx=2];
"d-05" -> "f-02"  [idx=5];
"f-01" -> "d-04"  [idx=4];
"f-01" -> "d-05"  [idx=5];
"f-02" -> "d-07"  [idx=7];
}

